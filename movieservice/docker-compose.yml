version: '3.8'

services:
  movie-service:
    build: .
    container_name: movie-service
    ports:
      - "8075:8075"
    depends_on:
      - postgres-db
      - kafka
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5474/movies_platform_db
      - SPRING_DATASOURCE_USERNAME=db1
      - SPRING_DATASOURCE_PASSWORD=db1
      - KAFKA_SERVERS=kafka:9092
      - EUREKA_URI=http://eureka-server:8774/eureka/
    networks:
      - movies-network
    restart: on-failure

  postgres-db:
    image: postgres
    container_name: postgres-db
    ports:
      - "5474:5432"
    environment:
      - POSTGRES_USER=db1
      - POSTGRES_PASSWORD=db1
      - POSTGRES_DB=movies_platform_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - movies-network
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - movies-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - movies-network

networks:
  movies-network:
    name: movies-network
    external: true

volumes:
  postgres-data:
    external: true